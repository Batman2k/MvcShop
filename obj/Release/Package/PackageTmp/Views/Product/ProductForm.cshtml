@model RapidMountain.Core.ViewModels.ProductViewModel


@{
    ViewBag.Title = Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm(Model.Title, "Product", null, FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discount, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Discount, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Discount, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Price, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Category, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubCategory, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.SubCategory, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SubCategory, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsVisible, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.CheckBoxFor(m => m.IsVisible)
                @Html.ValidationMessageFor(model => model.IsVisible, "", new {@class = "text-danger"})
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SerialNumber, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.SerialNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SerialNumber, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AmountInStock, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.AmountInStock, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.AmountInStock, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LimitedOffer, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.LimitedOffer, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.LimitedOffer, "", new {@class = "text-danger"})
            </div>
        </div>


        @*<div class="form-group">
                @Html.Label("Image One", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="files" />
                </div>
            </div>*@

        @*<div class="form-group">
                <label for="file1">Image one</label>
                <div class=" col-md-10">
                    <input type="file" name="files" id="file1" />
                </div>

            </div>*@


        <label for="file1">Picture 1</label>
        <input type="file" name="files" id="file1"/>

        <label for="file2">Picture 2</label>
        <input type="file" name="files" id="file2"/>

        <label for="file2">Picture 3</label>
        <input type="file" name="files" id="file3"/>

        <label for="file2">Picture 4</label>
        <input type="file" name="files" id="file4"/>

        <label for="file2">Picture 5</label>
        <input type="file" name="files" id="file5"/>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@